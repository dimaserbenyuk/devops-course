version: '3.8'
services:
  nextjs-app:
    container_name: nextjs-app
    # command: ["npx prisma generate"]
    # image: csrinu236/medium-nextjs-app # Placeholder for pushing image to Dockerhub
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - nextjs-app-build:/app # Named volume for nextjs-app app folder
      # - ./frontend:/app
      - node_modules:/app/node_modules # <-- creates the node_modules in frontend path
      - next:/app/.next
      - prisma:/app/prisma # <-- creates the .next folder in frontend path
  nginx:
    container_name: nginx
    # image: csrinu236/medium-nginx-app # Placeholder for pushing image to Dockerhub
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - nextjs-app-build:/app # Mount the named volume to Nginx's /app
    depends_on:
      - nextjs-app
    ports:
      - '80:80'

  mongo1:
    container_name: mongo1
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--keyFile", "/etc/mongodb/pki/keyfile"]
    restart: always
    ports:
      - 27017:27017
    # networks:
    #   mongo-cluster:
    #     ipv4_address: 111.222.32.2
    volumes:
      - ${PWD}/rs_keyfile:/etc/mongodb/pki/keyfile
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example



  mongo2:
    image: mongo:7.0
    container_name: mongo2
    command: ["--replSet", "rs0" ,"--bind_ip_all", "--port", "27018","--keyFile", "/etc/mongodb/pki/keyfile"]
    restart: always
    ports:
      - 27018:27018
    # networks:
    #   mongo-cluster:
    #     ipv4_address: 111.222.32.3
    volumes:
      - ${PWD}/rs_keyfile:/etc/mongodb/pki/keyfile
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example



  mongo3:
    image: mongo:7.0
    container_name: mongo3
    command: ["--replSet", "rs0" ,"--bind_ip_all", "--port", "27019","--keyFile", "/etc/mongodb/pki/keyfile"]
    restart: always
    ports:
      - 27019:27019
    # networks:
    #   mongo-cluster:
    #     ipv4_address: 111.222.32.4
    volumes:
      - ${PWD}/rs_keyfile:/etc/mongodb/pki/keyfile
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    # environment:
    #   - NEXTJS_CONTAINER_IP=nextjs-app # supplying environment vars for convert-nginx.sh file.
    # command: ['sh', '/etc/nginx/convert-nginx.sh']
    # this is for parsing the convert-nginx.sh file into nginx.conf file after supplying environment vars,
    # to get the resultant nginx.conf file in different environments.
    # We also supply kubernetes specific env vars in deployment.yml file
volumes:
  nextjs-app-build: # Define the named volume
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:
  node_modules:
  next:
  prisma: