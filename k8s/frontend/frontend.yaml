apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nextjs-app
  namespace: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-nextjs-app
  template:
    metadata:
      labels:
        app: my-nextjs-app
    spec:
      containers:
        - name: my-nextjs-app
          image: frontend44be2df5.azurecr.io/nextjs:aefcb1b
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 300m
              memory: 300Mi
          # volumeMounts:
          #   - name: tls-certs
          #     mountPath: /var/lib/tls
      imagePullSecrets:
        - name: acr
      # volumes:
      #   - name: tls-certs
      #     secret:
      #       secretName: tls-secret

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-frontend
  namespace: frontend
  annotations:
    cert-manager.io/cluster-issuer: production
spec:
  ingressClassName: external-nginx
  rules:
    - host: frontend.dmytroserbeniuk.uk
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: my-nextjs-app
                port:
                  number: 3000
            path: /
  tls:
    - hosts:
      - frontend.dmytroserbeniuk.uk
      secretName: frontend.dmytroserbeniuk-uk
---
apiVersion: v1
kind: Service
metadata:
  name: my-nextjs-app
  namespace: frontend
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: my-nextjs-app
# ---
# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: production
# spec:
#   acme:
#     email: dserbenyukgood@gmail.com
#     server: https://acme-v02.api.letsencrypt.org/directory
#     privateKeySecretRef:
#       name: production-cluster-issuer
#     solvers:
#       - selector: {}
#         http01:
#           ingress:
#             class: external-nginx
