---
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: my-mongodb
  namespace: mongodb
spec:
  members: 2
  type: ReplicaSet
  version: "5.0.5"
  security:
    authentication:
      modes:
      - SCRAM
  users:
  - name: todo-user
    db: todo
    passwordSecretRef:
      name: admin-user-password
    roles:
    - name: clusterAdmin
      db: todo
    - name: userAdminAnyDatabase
      db: todo
    - name: readWrite
      db: todo
    scramCredentialsSecretName: my-scram
  security:
    tls:
      enabled: true
      certificateKeySecretRef:
        name: mongodb-key-pair
      caCertificateSecretRef:
        name: mongodb-key-pair
      # allowConnectionsWithoutCertificates: true
      optional: true
    authentication:
      modes:
      - SCRAM
  additionalMongodConfig:
    storage.wiredTiger.engineConfig.journalCompressor: zlib
  statefulSet:
    spec:
      template:
        spec:
          initContainers:
            - command:
                - chown
                - -R
                - "2000"
                - /data
                - /logs
              image: busybox
              volumeMounts:
              - mountPath: /data
                name: data-volume
              - mountPath: /logs
                name: logs-volume
              securityContext:
                runAsNonRoot: false
                runAsUser: 0
                runAsGroup: 0
              name: change-dir-permissions
          containers:
          - name: mongod
            resources:
              limits:
                cpu: 300m
                memory: 300Mi
              requests:
                cpu: 200m
                memory: 200Mi      
      volumeClaimTemplates:
      - metadata:
          name: data-volume
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1G

      - metadata:
          name: logs-volume
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 1Gi
# mongosh "mongodb+srv://${ADMIN_USER}:${ADMIN_PASSWORD}@psmdb-db-rs0.percona.svc.cluster.local/admin?replicaSet=rs0&ssl=false"

# mongosh "mongodb+srv://admin-user:admin123@my-mongodb-svc.mongodb.svc.cluster.local/admin?ssl=true"

# mongodb://admin-user:admin123@my-mongodb-0.my-mongodb-svc.mongodb.svc.cluster.local:27017,my-mongodb-1.my-mongodb-svc.mongodb.svc.cluster.local:27017/admin?ssl=true



# mongosh \
#   --tls \
#   --tlsCAFile /var/lib/tls/ca/ca.crt \
#   --tlsCertificateKeyFile /var/lib/tls/server/*.pem \
#   "mongodb+srv://todo-user:admin123@my-mongodb-svc.mongodb.svc.cluster.local/todo?ssl=true"


# show dbs

# db.createUser(
#   {
#     user: 'dima',
#     pwd: 'devops123',
#     roles: [ { role: 'readWrite', db: 'todo' } ]
#   }
# );

# db.auth('dima', 'devops123')

# use todo

# db.Task.find()

# show collections

# DATABASE_URL=mongodb+srv://admin-user:admin123@my-mongodb-svc.mongodb.svc.cluster.local/admin?ssl=true&tlsCAFile=/var/lib/tls/ca.crt&tlsCertificateKeyFile=/var/lib/tls/server.pem

# DATABASE_URL=mongodb+srv://admin-user:admin123@my-mongodb-svc.mongodb.svc.cluster.local/admin?ssl=true&tlsCAFile=/var/lib/tls/ca.crt&tlsCertificateKeyFile=/var/lib/tls/server.pem

# DATABASE_URL=mongodb+srv://todo-user:admin123@my-mongodb-svc.mongodb.svc.cluster.local/todo?ssl=true&tlsCAFile=/var/lib/tls/ca.crt&tlsCertificateKeyFile=/var/lib/tls/server.pem