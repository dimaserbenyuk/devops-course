# apiVersion: v1
# kind: Service
# metadata:
#   name: mongodb-service
#   labels:
#     name: mongo
# spec:
#   ports:
#   - port: 27017
#     targetPort: 27017
#   clusterIP: None
#   selector:
#     role: mongo
# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongod
# spec:
#   selector:
#     matchLabels:
#       app: mongo
#   serviceName: "mongo"
#   replicas: 3
#   template:
#     metadata:
#       labels:
#         app: mongo
#     spec:
#       # affinity:
#       #   podAntiAffinity:
#       #     preferredDuringSchedulingIgnoredDuringExecution:
#       #     - weight: 100
#       #       podAffinityTerm:
#       #         labelSelector:
#       #           matchExpressions:
#       #           - key: replicaset
#       #             operator: In
#       #             values:
#       #             - MainRepSet
#       #         topologyKey: kubernetes.io/hostname
#       terminationGracePeriodSeconds: 10
#       volumes:
#         - name: secrets-volume
#           secret:
#             secretName: shared-bootstrap-data
#             defaultMode: 256
#       containers:
#         - name: mongod-container
#           #image: pkdone/mongo-ent:3.4
#           image: mongo
#           # command:
#           #   - "--replSet"
#           #   - "--bind_ip"
#           #   - "0.0.0.0"
#           #   - "MainRepSet"
#           #   - "--auth"
#           #   - "--clusterAuthMode"
#           #   - "keyFile"
#           #   - "--keyFile"
#           #   - "/etc/secrets-volume/internal-auth-mongodb-keyfile"
#           #   - "--setParameter"
#           #   - "authenticationMechanisms=SCRAM-SHA-1"
#           resources:
#             limits:
#               cpu: 300m
#               memory: 384Mi
#             requests:
#               cpu: 200m
#               memory: 256Mi
#           ports:
#             - containerPort: 27017
#           volumeMounts:
#             - name: secrets-volume
#               readOnly: true
#               mountPath: /etc/secrets-volume
#             - name: mongodb-persistent-storage-claim
#               mountPath: /data/db
#   # volumeClaimTemplates:
#   # - metadata:
#   #     name: mongodb-persistent-storage-claim
#   #     annotations:
#   #       volume.beta.kubernetes.io/storage-class: "standard"
#   #   spec:
#   #     accessModes: [ "ReadWriteOnce" ]
#   #     resources:
#   #       requests:
#   #         storage: 1Gi
#   volumeClaimTemplates:
#   - metadata:
#       name: mongodb-persistent-storage-claim
#     spec:
#       accessModes:
#       - ReadWriteOnce
#       storageClassName: standard
#       resources:
#         requests:
#           storage: 1Gi


apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: default
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo
    spec:
      # volumes:
        # - name: mongo-keyfile
        #   secret:
        #     secretName: mongo-keyfile
        #     defaultMode: 256
        # - name: secrets-volume
        #   secret:
        #     secretName: shared-bootstrap-data
        #     defaultMode: 256
      containers:
      - name: mongo
        image: mongo
        ports:
          - containerPort: 27017
        volumeMounts:
          # - name: mongo-keyfile
          #   mountPath: /etc/mongo-keyfile
          #   readOnly: true
          - name: mongops
            mountPath: /data/db
        command:
        - mongod
        - "--bind_ip_all"
        - "--replSet"
        # - "--keyFile"
        # - "/etc/mongo-keyfile/mongo-keyfile"
        - rs0
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: example
        # volumeMounts:
        #   - name: mongops
        #     mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongops
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo